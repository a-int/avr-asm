.include "m32def.inc"

reset:
	cli; флаг i=0 все прерывания запрещены
	ldi r16, 0x04 ; задаем Stack Pointer size High 
	out SPH, r16
	ldi r16, 0x5f; задаем Stack Pointer size Low
	out SPL, r16
	
	; Настройка Порта В
	ldi r16, 0xff ; настройка линий порта В на выход
	out DDRB, r16
	out PORTB, r16

	clr r20; очистка счетчика текущей комбинации для СДИ
	
	sei; флаг i=1 все прерывания разрешены

	
; ОСНОВНАЯ ЧАСТЬ ПРОГРАММЫ
main:
	ldi r31, high(tab_SDI*2)
	ldi r30, low(tab_SDI*2)
	
	clr r21; очистка регистра р21
	add r30, r20; сложение младшей части адреса комбинации СДИ
	adc r31, r21; сложение старшей части адреса комбинации СДИ

	lpm; загрузка следующей комбинации из таблицы комбинаций СДИ
	out PORTB, r0; запись следующей комбинации в порт В
	
	inc r20; увеличение счетчика комбинации
	cpi r20, 0x17; проверка на полный проход таблицы
	brcs main_end; переход в конец, если не последняя комбинация
	clr r20; очистка счетчика, если последняя комбинация СДИ

main_end:
	rcall del; вызов подпрограммы задержки
	rjmp main; переход в начало основной программы

del:
	ldi r19, 0xC8	; запись числа 200 в регистр r19
m3:	ldi r18, 0x53	; запись числа 83 в регистр r18
m2:	ldi r17, 0x0C	; запись числа 12 в регистр r17
m1: nop				; пропустить такт
	dec r17			; уменьшение значения в регистре r17
	brne m1			; переход вначало цикла, если регистр r17 не обнулился
	nop				; пропустить такт
	dec r18			; уменьшение значения в регистре r18
	brne m2			; переход вначало цикла, если регистр r18 не обнулился
	nop				; пропустить такт
	dec r19			; уменьшение значения в регистре r19
	brne m3			; переход вначало цикла, если регистр r19 не обнулился
	
	ret				; возврат из функции

tab_SDI:
	.db 0x01, 0x02
	.db 0x04, 0x08
	.db 0x10, 0x20
	.db 0x40, 0x80

	.db 0x40, 0x20
	.db 0x10, 0x08
	.db 0x04, 0x02
	.db 0x01, 0xFF

	.db 0x00, 0xAA
	.db 0x55, 0xAA
	.db 0xFF, 0x00
