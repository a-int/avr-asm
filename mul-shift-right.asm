main:
	ldi r18, 0x1F ;константа для перемножения (K) 
	ldi r19, 0x1A ; 16 718 367
	ldi r20, 0xFF

	ldi r26, 0x00 ; младшая часть адреса числа P
	ldi r27, 0x06 ; старшая часть адреса числа P
	ld r24, X+    ; сохранение старшей части числа P
	ld r23, X    ; сохранение младшей части числа P

	clr r0 			; очистка регистра р0 для сохранения результата
	clr r1 			; очистка регистра р1 для сохранения результата
	clr r2			; очистка регистра р2 для сохранения результата
	clr r3			; очистка регистра р3 для сохранения результата 
	clr r4			; очистка регистра р4 для сохранения результата

	ldi r31, 0x10		; сохранения колличества битов в множителе
n1:				
	lsr r24			; сдвиг старшего байта множителя вправо
	ror r23			; цикличиский свдиг младшего байта множимого вправо
	brcc sdv		; если бит в флаге С = 0 то пропуск
	add r2, r18		; прибавление младшего байта множимого
	adc r3, r19
	adc r4, r20
sdv:
	ror r4
	ror r3
	ror r2
	ror r1
	ror r0
	dec r31
	brne n1			; если остались биты переход в начало цикла

	ldi r16, 0x59 ; запись константы В в доп коде
	ldi r17, 0x1f
	ldi r18, 0x1a
	ldi r19, 0xeb
	ldi r20, 0xfb
	ldi r21, 0xff

	clr r5; очистка регистра который будет использоваться под 6 байт
	add r0, r16 ; сложение двух числе
	adc r1, r17
	adc r2, r18
	adc r3, r19
	adc r4, r20
	adc r5, r21

	clr r31 ; очистка регистра под знак
	mov r16, r5 ; копирование старшего байта
	rol r16 ; циклический сдвиг влево для проверки знака
	brcc exit ; если старший бит был ноль то число четное, переход к сохранению числа
	ldi r16, 0x01 ; сохранение единицы для перехода к прямому коду
	clr r17 ; создание нулевого регистра
	sub r0, r16 ; вычитание единицы из младшего байта 
	sbc r1, r17 ; вычитание с учетом переноса
	sbc r2, r17 ; вычитание с учетом переноса
	sbc r3, r17 ; вычитание с учетом переноса
	sbc r4, r17 ; вычитание с учетом переноса
	sbc r5, r17 ; вычитание с учетом переноса
	
	com r0 ; инверсия байта 
	com r1 ; инверсия байта 
	com r2 ; инверсия байта 
	com r3 ; инверсия байта 
	com r4 ; инверсия байта 
	com r5 ; инверсия байта 
	ldi r31, 0x01 ; сохранение единцы в регистр р31(потмоу что число отрицательное)
exit:
	ldi r26, 0x05 ; сохранение младшего байта адреса для сохранения
	ldi r27, 0x06 ; сохранение старшего байта адреса для сохранения
	st X+, r31 ; сохранение знака числа
	st X+, r4     ; запись первого байта результата 
	st X+, r3     ; запись второго байта результата
	st X+, r2     ; запись третьего байта для результата
	st X+, r1     ; запись четвертого байта для результата
	st X+, r0     ; запись пятого байта для результата

	rjmp main ; переход в начало программы

