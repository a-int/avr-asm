main:
	ldi r18, 0x1F ;константа для перемножения (K) 
	ldi r19, 0x1A ; 16 718 367
	ldi r20, 0xFF

	ldi r26, 0x00 ; младшая часть адреса числа P
	ldi r27, 0x06 ; старшая часть адреса числа P
	ld r24, X+    ; сохранение старшей части числа P
	ld r23, X    ; сохранение младшей части числа P

	clr r2 			; очистка регистра р0 для сохранения результата
	clr r3 			; очистка регистра р1 для сохранения результата
	clr r4			; очистка регистра р2 для сохранения результата
	clr r5			; очистка регистра р3 для сохранения результата 
	clr r6			; очистка регистра р4 для сохранения результата
	
	clr r7
	mul r18, r23
	add r2, r0
	adc r3, r1
	adc r4, r7
	adc r5, r7
	adc r6, r7

	mul r18, r24
	add r3, r0
	adc r4, r1
	adc r5, r7
	adc r6, r7

	mul r19, r23
	add r3, r0
	adc r4, r1
	adc r5, r7
	adc r6, r7

	mul r19, r24
	add r4, r0
	adc r5, r1
	adc r6, r7

	mul r20, r23
	add r4, r0
	adc r5, r1
	adc r6, r7

	mul r20, r24
	add r5, r0
	adc r6, r1

	ldi r16, 0x59 ; запись константы В в доп коде
	ldi r17, 0x1f
	ldi r18, 0x1a
	ldi r19, 0xeb
	ldi r20, 0xfb
	ldi r21, 0xff

	clr r7; очистка регистра который будет использоваться под 6 байт
	add r2, r16 ; сложение двух числе
	adc r3, r17
	adc r4, r18
	adc r5, r19
	adc r6, r20
	adc r7, r21

	clr r31 ; очистка регистра под знак
	mov r16, r7 ; копирование старшего байта
	rol r16 ; циклический сдвиг влево для проверки знака
	brcc exit ; если старший бит был ноль то число четное, переход к сохранению числа
	ldi r16, 0x01 ; сохранение единицы для перехода к прямому коду
	clr r17 ; создание нулевого регистра
	sub r2, r16 ; вычитание единицы из младшего байта 
	sbc r3, r17 ; вычитание с учетом переноса
	sbc r4, r17 ; вычитание с учетом переноса
	sbc r5, r17 ; вычитание с учетом переноса
	sbc r6, r17 ; вычитание с учетом переноса
	sbc r7, r17 ; вычитание с учетом переноса
	
	com r2 ; инверсия байта 
	com r3 ; инверсия байта 
	com r4 ; инверсия байта 
	com r5 ; инверсия байта 
	com r6 ; инверсия байта 
	com r7 ; инверсия байта 
	ldi r31, 0x01 ; сохранение единцы в регистр р31(потмоу что число отрицательное)
exit:
	ldi r26, 0x05 ; сохранение младшего байта адреса для сохранения
	ldi r27, 0x06 ; сохранение старшего байта адреса для сохранения
	st X+, r31 ; сохранение знака числа
	st X+, r6     ; запись первого байта результата 
	st X+, r5     ; запись второго байта результата
	st X+, r4     ; запись третьего байта для результата
	st X+, r3     ; запись четвертого байта для результата
	st X+, r2     ; запись пятого байта для результата

	rjmp main ; переход в начало программы

